---------------------------
---------------------------
lab3, 26/11/2015	
---------------------------
---------------------------

---------------------------
ottimizzatore:
---------------------------
 - efficiente in tempo e spazio
 - compatto

ES:
    var x,y;
    function add(m,n){
      return m+n
    }

    il compilatore è in difficoltà ad ottimizzarlo, a meno che non scrivo
    x=1;
    y=2;
---------------------------
tabella dei simboli:
---------------------------
 - Quando leggiamo file sorgentie ci salviamo es:
   nomi variabili, nomi funzioni, label dove abbiamo mandato i goto ecc
---------------------------
usage of lex:
---------------------------
 - eseguire specifiche azioni quando troviamo determinati input
   in particolare possiamo omettere (\n) o manipolare (a->d) input
 - lex 			yacc
   yylex	->	yyparse
---------------------------
espressioni regolari:
---------------------------
[^,\n] = tutto ciò che non è virgola né a capo
. = qualsiasi cosa che non sia new line
+ = ripetuto uno o più volta
| = or
? = 0 o 1 volta
^ = negazione
myindex"++" matcherà myindex++
a+ = aa*
[a-zA-Z]+ = almeno un carattere che vada da 'a' a 'z' o da 'A' a Z'
[a-zA-Z][a-zA-Z0-9]* = variabile di un lunguaggio

PER CASA: es1v2 con [^.\n] ma che funzioni
	  programma che se prima lettera di linea è a stampi first
                        se prima lettera di linea è b stampi second

targa auto Italia: [A-Z][A-Z][0-9][0-9][0-9][A-Z][A-Z]
noi non useremo:   [A-Z]\{2,2}[0-9]\{3,3}[A-Z]\{2,2}

^ inizio riga
$ fine riga

